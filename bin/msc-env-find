#!/bin/bash
set -eu # Exit when returns non-zero, Error when variable is unset.
### NAME
###     msc-env-find - Output my-sys-cfg environment base invokation path 
###
### SYNOPSIS
###     msc-env-find [options]
###
### DESCRIPTION
###     This program outputs environment values depending on the running mode: 
###     
###     Production mode:
###        msc-env-find runs from system binary path, 
###            i.e. /bin, /usr/bin, or /usr/local/bin
### 
###        Environment values in this mode:
###            MSC_BIN_DIR=<directory that msc-env-find is invoked>
###            MSC_LIBEXEC_DIR=/usr/libexec/my-sys-cfg
###            MSC_ETC_DIR=/etc
###            MSC_ETC_MSC_DIR=/etc/my-sys-cfg
###
###     Developing mode:
###        msc-env-find runs from project checkout dir, 
###            e.g. the git repostory you just checkout
###           
###        Environment values in this mode:
###            MSC_BIN_DIR=<directory that msc-env-find is invoked>
###            MSC_LIBEXEC_DIR=PROJ_CHECKOUT_DIR/libexec
###            MSC_ETC_DIR=PROJ_CHECKOUT_DIR/etc/
###            MSC_ETC_MSC_DIR=PROJ_CHECKOUT_DIR/etc/my-sys-cfg
###
###     Notes that, excecpt MSC_BIN_DIR, other environment values will not overwrite
###     existing values.
###
### INVOCATION
###     Other my-sys-cfg program can use following to get the required environments
###         eval "$($(dirname $(realpath ${BASH_SOURCE[0]}))/msc-env-find -f)"
###
### AUTHOR
###     Ding-Yi Chen (definite), dingyichen@gmail.com
###     Created in 2020-01-29
###

## MSC_BIN_DIR set to the directory that msc-env-find running
MSC_BIN_DIR=$(dirname $(realpath ${BASH_SOURCE[0]}))
##{{{== Is Development mode?
DevelopmentMode=0
if [[ -e "$MSC_BIN_DIR/../libexec/functions.sh" ]]; then
  DevelopmentMode=1
  MSC_ROOT_DIR=$(dirname "$MSC_BIN_DIR")
  : ${MSC_LIBEXEC_DIR:="$MSC_ROOT_DIR/libexec"}
  : ${MSC_ETC_DIR:="$MSC_ROOT_DIR/etc"}
  : ${MSC_ETC_MSC_DIR:="$MSC_ETC_DIR/my-sys-cfg"}
else
  : ${MSC_LIBEXEC_DIR:="/usr/libexec/my-sys-cfg"}
  : ${MSC_ETC_DIR:="/etc"}
  : ${MSC_ETC_MSC_DIR:="$MSC_ETC_DIR/my-sys-cfg"}
fi
##}}}

##{{{== Error if directory is missing 
Missing=0
RelevantEnvs="MSC_LIBEXEC_DIR MSC_ETC_DIR MSC_ETC_MSC_DIR"
for k in $RelevantEnvs; do
  eval "d=$(eval echo \$$k)"
  if [[ ! -r "$d" ]]; then
    logger -s "Directory $d for $k is unreadable"
    Missing=1
  fi
done

if [[ $Missing -eq 1 ]]; then
  exit 
fi

##}}}
##== Parse Start ==
SourceFunctionsShPrint=0
###
### OPTIONS
while getopts "hf" opt; do
  case $opt in
    h)
      ###     -h: Show this help
      msc_help_print $0
      exit $MSC_EXIT_OK
      ;;
    f)
      ###
      ###     -f: Print "source <path/to/functions.sh>"
      ###         So calling script can just use "eval $(msc-env-find -f)"
      SourceFunctionsShPrint=1
      ;;
  esac
done
shift $((OPTIND - 1))

for v in MSC_BIN_DIR $RelevantEnvs; do
  echo "$v=$(eval echo \$$v)"
done

if [ $SourceFunctionsShPrint -eq 1 ]; then
  echo "source $MSC_LIBEXEC_DIR/functions.sh"
fi
